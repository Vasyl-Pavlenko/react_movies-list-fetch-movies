{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","utils/defaultMovie.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","defaultMovie","Poster","Title","Plot","imdbID","FindMovie","addMovie","useState","setMovie","setQuery","isMovieExist","setIsMovieExist","isLoading","setIsLoading","isTitleError","setIsTitleError","handleFind","event","a","preventDefault","loadMovie","onSubmit","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","prev","some","current","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7310baca.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=d67f30c9';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { MovieData } from '../types/MovieData';\nimport { Movie } from '../types/Movie';\n\nexport const defaultMovie = ({\n  Poster,\n  Title,\n  Plot,\n  imdbID,\n}: MovieData): Movie => {\n  return {\n    title: Title,\n    description: Plot,\n    imgUrl: Poster === 'N/A'\n      ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n      : Poster,\n    imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n    imdbId: imdbID,\n  };\n};\n","import React, { useState, SetStateAction, Dispatch } from 'react';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { defaultMovie } from '../../utils/defaultMovie';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  addMovie: Dispatch<SetStateAction<Movie[]>>\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [isMovieExist, setIsMovieExist] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTitleError, setIsTitleError] = useState(false);\n\n  const handleFind = async (event: React.FormEvent) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      const loadMovie = await getMovie(query);\n\n      if ((loadMovie as MovieData).imdbID) {\n        setMovie(defaultMovie(loadMovie as MovieData));\n      } else {\n        setIsTitleError(true);\n      }\n    } catch (error) {\n      setIsTitleError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setIsTitleError(false);\n  };\n\n  const handleAddMovie = () => {\n    if (!movie) {\n      return;\n    }\n\n    addMovie(prev => {\n      if (prev.some(current => current.imdbId === movie.imdbId)) {\n        setIsMovieExist(true);\n\n        return prev;\n      }\n\n      return [...prev, movie];\n    });\n\n    setMovie(null);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleFind}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': isTitleError,\n              })}\n              value={query}\n              onChange={handleInputChange}\n            />\n          </div>\n\n          {isTitleError && (\n            <p\n              className=\"help is-danger\"\n              data-cy=\"errorMessage\"\n            >\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button', 'is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!query}\n            >\n              {!movie\n                ? 'Find a movie'\n                : 'Search again'}\n            </button>\n          </div>\n\n          {isMovieExist && (\n            <p className=\"help is-danger\">\n              This movie is already on the list!\n            </p>\n          )}\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div\n          className=\"container\"\n          data-cy=\"previewContainer\"\n        >\n          <h2 className=\"title\">\n            Preview\n          </h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App:React.FC = () => {\n  const [movies, setMovie] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={setMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}